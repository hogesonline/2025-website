title: 'Introducing Potnia: A Python language library for the conversion of ancient
  texts to Unicode'
start: 2024-11-23 13:30:00+11:00
end: 2024-11-23 14:00:00+11:00
room: eureka2
track:
abstract: "<p>The last five years have seen a significant increase in the application
  of machine learning to the study of ancient scripts. Applications are broad, and
  include recognition via Optical Character Recognition (OCR), textual restoration,
  palaeographic analysis, topic modelling, representation learning, decipherment and
  machine translation (Sommerschield 2023). A large number of ancient language corpora
  have been digitised in recent decades, supporting this research. However, while
  the necessary Unicode blocks for many of these ancient scripts are available, a
  number of these data sets are still presented as Romanised transliterations.</p>\n
  <p>In response to this situation, we have created Potnia (https://pypi.org/project/potnia/),
  an open-source Python language library under the Apache 2.0 license, designed to
  convert such transliterated texts to Unicode. The session image accompanying this
  proposal provides an example of Potnia’s conversion process, with a Romanised transliteration
  of a Linear B text as the input, and the Unicode representation of this same text
  as the output. This conversion is crucial for downstream machine learning tasks,
  as tokenisation in the original Unicode script allows for more accurate representation
  of linguistic structures and mitigates potential biases introduced by transliteration.</p>\n\
  <p>Potnia's flexible architecture, built on Python's object-oriented principles,
  employs string manipulation techniques and regular expressions to handle various
  complexities inherent in ancient texts, such as uncertain readings, missing elements,
  and script-specific notations. At present, the library can be used for Linear B
  texts, with functionality for Linear A, Sumerian and Akkadian soon to follow.</p>\n\
  <p>Potnia's design allows for easy addition of new scripts, each with its own set
  of rules for tokenisation, regularisation, and character mapping. This extensibility
  positions us well for future inclusion of additional scripts. To ensure reliability
  and facilitate open-source contributions, we've implemented a comprehensive test
  suite using pytest, with test cases defined in YAML files for easy expansion. This
  approach covers key functionalities across different scripts and simplifies the
  process of adding new test scenarios as the library grows.</p>\n<p><b><em>References</em></b>\n
  Sommerschield, T., Y. Assael, J. Pavlopoulos, V. Stefanak, A. Senior, C. Dyer, J.
  Bodel, J. Prag, I. Androutsopoulos, and N.D. Freitas. 2023. “Machine Learning for
  Ancient Languages: A Survey.” <em>Computational Linguistics</em> 49 (3): 1–45. doi:10.1162/coli_a_00481.</p>"
description: ''
code: HMWPGH
speakers:
- ZUWBQU
- YJFZGW
cw:
youtube_slug: 7h4G53etywI
